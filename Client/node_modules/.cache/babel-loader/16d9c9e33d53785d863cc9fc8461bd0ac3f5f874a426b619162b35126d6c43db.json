{"ast":null,"code":"var _jsxFileName = \"/Users/harlock/Desktop/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import './App.css';\n// import Cards from './components/Cards/Cards';\n// import Nav from './components/Nav/Nav';\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// // import { Router, Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\n// import { BrowserRouter, Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\n// import Form from './components/Form/Form';\n\n// import Detail from './components/Detail/Detail';\n// import About from \"./components/About/About\"\n// import { BrowserRouter } from 'react-router-dom';\n\n// const email = \"harlock184@gmail.com\"\n// const password = \"feder1234\"\n\n// const example = {\n//    id: 1,\n//    name: 'Rick Sanchez',\n//    status: 'Alive',\n//    species: 'Human',\n//    gender: 'Male',\n//    origin: {\n//       name: 'Earth (C-137)',\n//       url: 'https://rickandmortyapi.com/api/location/1',\n//    },\n//    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\n// };\n\n// function App() {\n//    const location = useLocation();\n//    const [characters, setCharacters] = useState([]);\n//    const [access, setAccess]= useState(false);\n//    const navigate = useNavigate();\n//    const login =(userData)=>{\n//       if (userData.password === password && userData.email === email) {\n//          setAccess(true);\n//          navigate('/home');\n//       }\n\n//    }\n//    useEffect(()=>{\n//       !access && navigate(\"/\")\n\n//    }, [access])\n\n//    function onSearch(id) {\n//       axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n//          if (data.name) {\n//             setCharacters((oldChars) => [...oldChars, data]);\n//          } else {\n//             window.alert('¡No hay personajes con este ID!');\n//          }\n//       });\n//    }\n\n//    const onClose = (id) => {\n//       const charatersFiltered = characters.filter(character => character.id !== Number(id));\n//       setCharacters(charatersFiltered);\n//    };\n\n//    return (\n//       <div className='App'>\n//       {\n//       location.pathname !==\"/\" && <Nav onSearch={onSearch} /> \n//       }\n\n//           <Routes>\n//               <Route path=\"/\"element={<Form login={login}/>}/>\n//               <Route path=\"/home\" element={<Cards characters={characters} onClose={onClose} />} />\n//               <Route path=\"/detail/:id\" element={<Detail />} />\n//               <Route path=\"/about\" element={<About />} />\n//           </Routes>\n\n//    </div>\n\n//    );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport './App.css';\nimport Cards from './components/Cards/Cards';\nimport Nav from './components/Nav/Nav';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport Form from './components/Form/Form';\nimport Detail from './components/Detail/Detail';\nimport About from \"./components/About/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst email = \"harlock184@gmail.com\";\nconst password = \"feder1234\";\nconst example = {\n  id: 1,\n  name: 'Rick Sanchez',\n  status: 'Alive',\n  species: 'Human',\n  gender: 'Male',\n  origin: {\n    name: 'Earth (C-137)',\n    url: 'https://rickandmortyapi.com/api/location/1'\n  },\n  image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg'\n};\nfunction App() {\n  _s();\n  const location = useLocation();\n  const [characters, setCharacters] = useState([]);\n  const [access, setAccess] = useState(false);\n  const navigate = useNavigate();\n  const login = userData => {\n    if (userData.password === password && userData.email === email) {\n      setAccess(true);\n      navigate('/home');\n    }\n  };\n  useEffect(() => {\n    !access && navigate(\"/\");\n  }, [access]);\n  function onSearch(id) {\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    });\n  }\n  const onClose = id => {\n    const charatersFiltered = characters.filter(character => character.id !== Number(id));\n    setCharacters(charatersFiltered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"i9vg4AsQq5yB+8BBOf27r6+cZ0w=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Cards","Nav","useState","useEffect","axios","BrowserRouter","Routes","Route","useLocation","useNavigate","Form","Detail","About","jsxDEV","_jsxDEV","email","password","example","id","name","status","species","gender","origin","url","image","App","_s","location","characters","setCharacters","access","setAccess","navigate","login","userData","onSearch","then","_ref","data","oldChars","window","alert","onClose","charatersFiltered","filter","character","Number","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/harlock/Desktop/rick_and_morty/src/App.js"],"sourcesContent":["// import React from 'react';\n// import './App.css';\n// import Cards from './components/Cards/Cards';\n// import Nav from './components/Nav/Nav';\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// // import { Router, Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\n// import { BrowserRouter, Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\n// import Form from './components/Form/Form';\n\n// import Detail from './components/Detail/Detail';\n// import About from \"./components/About/About\"\n// import { BrowserRouter } from 'react-router-dom';\n\n\n// const email = \"harlock184@gmail.com\"\n// const password = \"feder1234\"\n\n// const example = {\n//    id: 1,\n//    name: 'Rick Sanchez',\n//    status: 'Alive',\n//    species: 'Human',\n//    gender: 'Male',\n//    origin: {\n//       name: 'Earth (C-137)',\n//       url: 'https://rickandmortyapi.com/api/location/1',\n//    },\n//    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\n// };\n\n// function App() {\n//    const location = useLocation();\n//    const [characters, setCharacters] = useState([]);\n//    const [access, setAccess]= useState(false);\n//    const navigate = useNavigate();\n//    const login =(userData)=>{\n//       if (userData.password === password && userData.email === email) {\n//          setAccess(true);\n//          navigate('/home');\n//       }\n   \n      \n//    }\n//    useEffect(()=>{\n//       !access && navigate(\"/\")\n\n//    }, [access])\n\n\n//    function onSearch(id) {\n//       axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n//          if (data.name) {\n//             setCharacters((oldChars) => [...oldChars, data]);\n//          } else {\n//             window.alert('¡No hay personajes con este ID!');\n//          }\n//       });\n//    }\n\n//    const onClose = (id) => {\n//       const charatersFiltered = characters.filter(character => character.id !== Number(id));\n//       setCharacters(charatersFiltered);\n//    };\n\n//    return (\n//       <div className='App'>\n//       {\n//       location.pathname !==\"/\" && <Nav onSearch={onSearch} /> \n//       }\n  \n\n\n      \n//           <Routes>\n//               <Route path=\"/\"element={<Form login={login}/>}/>\n//               <Route path=\"/home\" element={<Cards characters={characters} onClose={onClose} />} />\n//               <Route path=\"/detail/:id\" element={<Detail />} />\n//               <Route path=\"/about\" element={<About />} />\n//           </Routes>\n      \n//    </div>\n\n     \n//    );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport './App.css';\nimport Cards from './components/Cards/Cards';\nimport Nav from './components/Nav/Nav';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter, Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport Form from './components/Form/Form';\n\nimport Detail from './components/Detail/Detail';\nimport About from \"./components/About/About\";\n\nconst email = \"harlock184@gmail.com\";\nconst password = \"feder1234\";\n\nconst example = {\n   id: 1,\n   name: 'Rick Sanchez',\n   status: 'Alive',\n   species: 'Human',\n   gender: 'Male',\n   origin: {\n      name: 'Earth (C-137)',\n      url: 'https://rickandmortyapi.com/api/location/1',\n   },\n   image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\n};\n\nfunction App() {\n   const location = useLocation();\n   const [characters, setCharacters] = useState([]);\n   const [access, setAccess]= useState(false);\n   const navigate = useNavigate();\n\n   const login = (userData) => {\n      if (userData.password === password && userData.email === email) {\n         setAccess(true);\n         navigate('/home');\n      }\n   };\n\n   useEffect(() => {\n      !access && navigate(\"/\");\n   }, [access]);\n\n   function onSearch(id) {\n      axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n         if (data.name) {\n            setCharacters((oldChars) => [...oldChars, data]);\n         } else {\n            window.alert('¡No hay personajes con este ID!');\n         }\n      });\n   }\n\n   const onClose = (id) => {\n      const charatersFiltered = characters.filter(character => character.id !== Number(id));\n      setCharacters(charatersFiltered);\n   };\n\n   return (\n      <div className='App'>\n         {location.pathname !==\"/\" && <Nav onSearch={onSearch} />} \n         <Routes>\n            <Route path=\"/\" element={<Form login={login}/>} />\n            <Route path=\"/home\" element={<Cards characters={characters} onClose={onClose} />} />\n            <Route path=\"/detail/:id\" element={<Detail />} />\n            <Route path=\"/about\" element={<About />} />\n         </Routes>\n      </div>\n   );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}